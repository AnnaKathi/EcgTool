//---------------------------------------------------------------------------
#ifndef classACH
#define classACH
//---------------------------------------------------------------------------
#include <classes.hpp>
//---------------------------------------------------------------------------
#include "../basics/classBase.h"
//---------------------------------------------------------------------------
//typedef std::vector<float> float_vec_t; -> ist das gleiche wie: typedef std::vector<float> ilist_t;
//---------------------------------------------------------------------------
//! Die Klasse cAC bietet Funktionalitäten an, um eine Autokorrelation erstellen zu können
class PACKAGE cAC : public cBase
	{
public:
	cAC(); //! Konstruktor für cAC
	~cAC(); //! Destruktor für cAC

	//! Erstellt das AC-Template
	/*! Aus dem übergebenen Standardherzschlag wird eine AC gebildet und
	 *  zurückgegeben. Der aufrufende Algorithmus kümmert sich um Auswertung
	 *  und Speicherung usw.
	 *  /param (std::map) Standardherzschlag
	 *  /return (std::map) Template
	 */
	iarray_t	createTemplate(iarray_t herzschlag);

private:
	iarray_t	buildACOld(iarray_t array);
	iarray_t	buildAC(iarray_t array);
	};
//---------------------------------------------------------------------------
#endif
